//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gapura.BLL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class YSIDGAEntitiesConn : DbContext
    {
        public YSIDGAEntitiesConn()
            : base("name=YSIDGAEntitiesConn")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Category> Categories { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<Region> Regions { get; set; }
        public DbSet<Shipper> Shippers { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
        public DbSet<Territory> Territories { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<ProductsInventory> ProductsInventories { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<ReceiveHeader> ReceiveHeaders { get; set; }
        public DbSet<MasterPeriod> MasterPeriods { get; set; }
        public DbSet<MasterUnit> MasterUnits { get; set; }
        public DbSet<TermOfPay> TermOfPays { get; set; }
        public DbSet<StockCard> StockCards { get; set; }
        public DbSet<MasterCurrency> MasterCurrencies { get; set; }
        public DbSet<POHeader> POHeaders { get; set; }
        public DbSet<MasterAssetsType> MasterAssetsTypes { get; set; }
        public DbSet<MasterRequestType> MasterRequestTypes { get; set; }
        public DbSet<MasterTransType> MasterTransTypes { get; set; }
        public DbSet<PODetail> PODetails { get; set; }
        public DbSet<ReceiveDetail> ReceiveDetails { get; set; }
        public DbSet<ReleaseDetail> ReleaseDetails { get; set; }
        public DbSet<ReleaseHeader> ReleaseHeaders { get; set; }
        public DbSet<RequestDetail> RequestDetails { get; set; }
        public DbSet<RequestHeader> RequestHeaders { get; set; }
        public DbSet<MasterOffice> MasterOffices { get; set; }
        public DbSet<Division> Divisions { get; set; }
        public DbSet<MasterTitle> MasterTitles { get; set; }
        public DbSet<CustomerDemographic> CustomerDemographics { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<Departement> Departements { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<RBAC_UserProfile> RBAC_UserProfile { get; set; }
    
        public virtual int SP_CustOrderHist(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CustOrderHist", customerIDParameter);
        }
    
        public virtual int SP_CustOrdersDetail(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CustOrdersDetail", orderIDParameter);
        }
    
        public virtual ObjectResult<SP_CustOrdersOrders_Result> SP_CustOrdersOrders(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CustOrdersOrders_Result>("SP_CustOrdersOrders", customerIDParameter);
        }
    
        public virtual int SP_EmployeeSalesbyCountry(Nullable<System.DateTime> beginning_Date, Nullable<System.DateTime> ending_Date)
        {
            var beginning_DateParameter = beginning_Date.HasValue ?
                new ObjectParameter("Beginning_Date", beginning_Date) :
                new ObjectParameter("Beginning_Date", typeof(System.DateTime));
    
            var ending_DateParameter = ending_Date.HasValue ?
                new ObjectParameter("Ending_Date", ending_Date) :
                new ObjectParameter("Ending_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EmployeeSalesbyCountry", beginning_DateParameter, ending_DateParameter);
        }
    
        public virtual int SP_SalesByCategory(string categoryName, string ordYear)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var ordYearParameter = ordYear != null ?
                new ObjectParameter("OrdYear", ordYear) :
                new ObjectParameter("OrdYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesByCategory", categoryNameParameter, ordYearParameter);
        }
    
        public virtual int SP_SalesbyYear(Nullable<System.DateTime> beginning_Date, Nullable<System.DateTime> ending_Date)
        {
            var beginning_DateParameter = beginning_Date.HasValue ?
                new ObjectParameter("Beginning_Date", beginning_Date) :
                new ObjectParameter("Beginning_Date", typeof(System.DateTime));
    
            var ending_DateParameter = ending_Date.HasValue ?
                new ObjectParameter("Ending_Date", ending_Date) :
                new ObjectParameter("Ending_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesbyYear", beginning_DateParameter, ending_DateParameter);
        }
    
        public virtual ObjectResult<SP_TenMostExpensiveProducts_Result> SP_TenMostExpensiveProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TenMostExpensiveProducts_Result>("SP_TenMostExpensiveProducts");
        }
    
        public virtual ObjectResult<SPI_Categories_Result> SPI_Categories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_Categories_Result>("SPI_Categories");
        }
    
        public virtual ObjectResult<SPI_Customers_Result> SPI_Customers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_Customers_Result>("SPI_Customers");
        }
    
        public virtual int SPI_Departement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPI_Departement");
        }
    
        public virtual ObjectResult<SPI_Employee_Result> SPI_Employee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_Employee_Result>("SPI_Employee");
        }
    
        public virtual ObjectResult<SPI_PODetail_Result> SPI_PODetail(Nullable<int> pOID)
        {
            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_PODetail_Result>("SPI_PODetail", pOIDParameter);
        }
    
        public virtual ObjectResult<SPI_Products_Result> SPI_Products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_Products_Result>("SPI_Products");
        }
    
        public virtual ObjectResult<SPI_ProductsInventory_Result> SPI_ProductsInventory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_ProductsInventory_Result>("SPI_ProductsInventory");
        }
    
        public virtual ObjectResult<SPI_RequestDetail_Result> SPI_RequestDetail(Nullable<int> requestID)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_RequestDetail_Result>("SPI_RequestDetail", requestIDParameter);
        }
    
        public virtual ObjectResult<SPI_Suppliers_Result> SPI_Suppliers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_Suppliers_Result>("SPI_Suppliers");
        }
    
        public virtual ObjectResult<SPI_POHeader_Result> SPI_POHeader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_POHeader_Result>("SPI_POHeader");
        }
    
        public virtual ObjectResult<SPI_RequestHeader_Result> SPI_RequestHeader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPI_RequestHeader_Result>("SPI_RequestHeader");
        }
    }
}
